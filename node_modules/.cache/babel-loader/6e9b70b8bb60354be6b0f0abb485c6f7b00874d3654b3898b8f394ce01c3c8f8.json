{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Documents\\\\Maria\\\\Bootcamp\\\\React\\\\react-app\\\\src\\\\components\\\\Mapa.js\";\nimport './../styles/css/main.css';\nimport React from 'react';\n\n// function Mapa() {\n//   return (\n//     <div className='map-area'>\n//       mapa\n//     </div>\n//   )\n// }\n\n// export default Mapa\n\n// API google maps: AIzaSyDuj1zTOb2Tb8JDPZjgo9FbI7wnKbGQa70\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Component,\n  PropTypes\n} = React;\nconst {\n  render\n} = ReactDOM;\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this._createMap = () => {\n      const {\n        mapCanvas\n      } = this.refs;\n      const {\n        config\n      } = this.props;\n      if (config.type === 'street') {\n        return new google.maps.StreetViewPanorama(mapCanvas, config.mapOptions);\n      }\n      return new google.maps.Map(mapCanvas, config.mapOptions);\n    };\n    this._createMarkers = () => {\n      const {\n        config\n      } = this.props;\n      const {\n        _createInfoWindow\n      } = this;\n      if (config.allowClusters) {\n        const markers = _.map(config.locations, (location, i) => {\n          const marker = new google.maps.Marker({\n            position: location\n          });\n          _createInfoWindow(marker, location);\n          return marker;\n        });\n        const markerCluster = new MarkerClusterer(this.map, markers, {\n          imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n        });\n      } else {\n        _.forEach(config.locations, location => {\n          const marker = new google.maps.Marker({\n            position: location,\n            map: this.map,\n            title: location.infoWindowContent.title || ''\n          });\n          _createInfoWindow(marker, location);\n        });\n      }\n    };\n    this._createInfoWindow = (marker, location) => {\n      const {\n        title,\n        text,\n        imgUrl\n      } = location.infoWindowContent;\n      const infoWindowTemplate = `\n      <div class=\"info-window\" style=\"background-image: url(${imgUrl})\"}>\n        <h4>${title}</h4>\n        <p>${text}</p>\n      </div>\n    `;\n      const infoWindow = new google.maps.InfoWindow({\n        content: infoWindowTemplate\n      });\n      marker.addListener('click', function () {\n        infoWindow.open(this.map, marker);\n      });\n    };\n  }\n  componentDidMount() {\n    this.map = this._createMap();\n    this.marker = this._createMarkers();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-map\",\n      ref: \"mapCanvas\",\n      children: \"LOADING MAP...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n}\nGoogleMap.propTypes = {\n  config: PropTypes.object.isRequired\n};\nGoogleMap.defaultProps = {\n  config: {}\n};\nconst App = () => {\n  const mapViewConfig = {\n    mapOptions: {\n      center: {\n        lat: 40.3984013,\n        lng: -3.6864597\n      },\n      zoom: 18,\n      streetViewControl: true,\n      scrollwheel: true\n    },\n    type: 'map',\n    allowClusters: false,\n    locations: [{\n      lat: 40.3984013,\n      lng: -3.6864597,\n      infoWindowContent: {\n        title: 'Ogilvy',\n        text: 'Agencia de Marketing Digital.',\n        imgUrl: 'http://static.thousandwonders.net/Willis.Tower.original.1014.jpg'\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexbox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container u-vr\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          config: mapViewConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 142,\n  columnNumber: 8\n}, this), document.body);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","PropTypes","render","ReactDOM","GoogleMap","constructor","props","_createMap","mapCanvas","refs","config","type","google","maps","StreetViewPanorama","mapOptions","Map","_createMarkers","_createInfoWindow","allowClusters","markers","_","map","locations","location","i","marker","Marker","position","markerCluster","MarkerClusterer","imagePath","forEach","title","infoWindowContent","text","imgUrl","infoWindowTemplate","infoWindow","InfoWindow","content","addListener","open","componentDidMount","propTypes","object","isRequired","defaultProps","App","mapViewConfig","center","lat","lng","zoom","streetViewControl","scrollwheel","document","body"],"sources":["C:/Users/carlo/Documents/Maria/Bootcamp/React/react-app/src/components/Mapa.js"],"sourcesContent":["import './../styles/css/main.css';\r\nimport React from 'react';\r\n\r\n// function Mapa() {\r\n//   return (\r\n//     <div className='map-area'>\r\n//       mapa\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Mapa\r\n\r\n// API google maps: AIzaSyDuj1zTOb2Tb8JDPZjgo9FbI7wnKbGQa70\r\n\r\nconst { Component, PropTypes } = React;\r\nconst { render } = ReactDOM;\r\n\r\nclass GoogleMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  \r\n  static propTypes = {\r\n    config: PropTypes.object.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    config: {},\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.map = this._createMap();\r\n    this.marker = this._createMarkers();\r\n  };\r\n  \r\n  _createMap = () => {\r\n    const { mapCanvas } = this.refs;\r\n    const { config } = this.props; \r\n    \r\n    if (config.type === 'street') {\r\n      return new google.maps.StreetViewPanorama(mapCanvas, config.mapOptions);\r\n    } \r\n    \r\n    return new google.maps.Map(mapCanvas, config.mapOptions);\r\n  };\r\n\r\n  _createMarkers = () => {\r\n    const { config } = this.props;\r\n    const { _createInfoWindow } = this;\r\n    \r\n    if (config.allowClusters) {\r\n      const markers = _.map(config.locations, (location, i) => {\r\n        const marker = new google.maps.Marker({ position: location });\r\n        _createInfoWindow(marker, location);\r\n        return marker;\r\n      });\r\n      \r\n      const markerCluster = new MarkerClusterer(\r\n        this.map, \r\n        markers,\r\n        {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'}\r\n      );\r\n    } else {\r\n      _.forEach(config.locations, location => {\r\n        const marker = new google.maps.Marker({\r\n          position: location,\r\n          map: this.map,\r\n          title: location.infoWindowContent.title || ''\r\n        });\r\n        _createInfoWindow(marker, location);\r\n      });\r\n    }\r\n  };\r\n\r\n  _createInfoWindow = (marker, location) => {\r\n    const { title, text, imgUrl } = location.infoWindowContent;\r\n    \r\n    const infoWindowTemplate = `\r\n      <div class=\"info-window\" style=\"background-image: url(${imgUrl})\"}>\r\n        <h4>${ title }</h4>\r\n        <p>${ text }</p>\r\n      </div>\r\n    `;\r\n    \r\n    const infoWindow = new google.maps.InfoWindow({\r\n      content: infoWindowTemplate\r\n    });\r\n\r\n    marker.addListener('click', function() {\r\n      infoWindow.open(this.map, marker);\r\n    });\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"google-map\" ref=\"mapCanvas\">\r\n        LOADING MAP...\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst App = () => {  \r\n  const mapViewConfig = {\r\n    mapOptions: {\r\n      center: {\r\n        lat: 40.3984013, \r\n        lng: -3.6864597,\r\n      },\r\n      zoom: 18,\r\n      streetViewControl: true, \r\n      scrollwheel: true \r\n    },\r\n    type: 'map',\r\n    allowClusters: false,\r\n    locations: [\r\n      { \r\n        lat: 40.3984013, \r\n        lng: -3.6864597, \r\n        infoWindowContent: { \r\n          title: 'Ogilvy', \r\n          text: 'Agencia de Marketing Digital.', \r\n          imgUrl: 'http://static.thousandwonders.net/Willis.Tower.original.1014.jpg'\r\n        } \r\n      }\r\n    ]\r\n  };  \r\n  return (\r\n    <div className=\"page\">\r\n      \r\n      <div className=\"flexbox\">\r\n        <div className=\"map-container u-vr\">\r\n          <GoogleMap config={ mapViewConfig } />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nrender(<App />, document.body);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}